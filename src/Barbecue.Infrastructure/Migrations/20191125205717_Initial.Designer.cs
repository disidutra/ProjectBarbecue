// <auto-generated />
using System;
using Barbecue.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Barbecue.Infrastructure.Migrations
{
    [DbContext(typeof(EfBaseContext))]
    [Migration("20191125205717_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Barbecue.ApplicationCore.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("DrinksValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EventValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Barbecue.ApplicationCore.Entities.EventUser", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("DrinksValue")
                        .HasColumnType("bit");

                    b.Property<int?>("EventId1")
                        .HasColumnType("int");

                    b.Property<bool>("EventValue")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.Property<decimal>("ValuePaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EventId", "UserId");

                    b.HasIndex("EventId1");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("EventUser");
                });

            modelBuilder.Entity("Barbecue.ApplicationCore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Barbecue.ApplicationCore.Entities.EventUser", b =>
                {
                    b.HasOne("Barbecue.ApplicationCore.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Barbecue.ApplicationCore.Entities.Event", null)
                        .WithMany("EventUSers")
                        .HasForeignKey("EventId1");

                    b.HasOne("Barbecue.ApplicationCore.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Barbecue.ApplicationCore.Entities.User", null)
                        .WithMany("EventUSers")
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
